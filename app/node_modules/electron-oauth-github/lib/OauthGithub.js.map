{"version":3,"sources":["../src/OauthGithub.js"],"names":["AuthWindow","id","secret","scopes","clientId","clientSecret","window","callback","on","width","height","webPreferences","nodeIntegration","authURL","loadURL","show","webContents","event","url","handleCallback","oldUrl","newUrl","raw_code","exec","code","length","error","requestGithubToken","alert","post","client_id","client_secret","end","err","response","destroy","access_token","body"],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;AACA;;;;;;;;IAEqBA,U;AACnB,4BAAyC;AAAA,QAA3BC,EAA2B,QAA3BA,EAA2B;AAAA,QAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,2BAAfC,MAAe;AAAA,QAAfA,MAAe,+BAAN,EAAM;;AAAA;;AACvC,0BAAOF,EAAP,EAAW,sBAAX;AACA,0BAAOC,MAAP,EAAe,0BAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgBH,EAAhB;AACA,SAAKI,YAAL,GAAoBH,MAApB;AACA,SAAKI,MAAL,GAAc,IAAd;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACD;;;;iCAEYA,Q,EAAU;AAAA;;AACrB,WAAKA,QAAL,GAAgBA,QAAhB;AACA,oBAAIC,EAAJ,CAAO,OAAP,EAAgB,YAAM;AACpB,cAAKF,MAAL,GAAc,4BAAkB,EAAEG,OAAO,GAAT,EAAcC,QAAQ,GAAtB,EAA2BC,gBAAgB,EAACC,iBAAiB,KAAlB,EAA3C,EAAlB,CAAd;AACA,YAAIC,UAAU,wDAAwD,MAAKT,QAA7D,GAAwE,SAAxE,GAAoF,MAAKD,MAAvG;AACA,cAAKG,MAAL,CAAYQ,OAAZ,CAAoBD,OAApB;AACA,cAAKP,MAAL,CAAYS,IAAZ;AACA,cAAKT,MAAL,CAAYU,WAAZ,CAAwBR,EAAxB,CAA2B,eAA3B,EAA4C,UAACS,KAAD,EAAQC,GAAR,EAAgB;AAC1D,gBAAKC,cAAL,CAAoBD,GAApB;AACD,SAFD;AAGA,cAAKZ,MAAL,CAAYU,WAAZ,CAAwBR,EAAxB,CAA2B,0BAA3B,EAAuD,UAACS,KAAD,EAAQG,MAAR,EAAgBC,MAAhB,EAA2B;AAChF,gBAAKF,cAAL,CAAoBE,MAApB;AACD,SAFD;AAGA,cAAKf,MAAL,CAAYE,EAAZ,CAAe,OAAf,EAAwB,YAAM;AAC5B,gBAAKF,MAAL,GAAc,IAAd;AACD,SAFD,EAEG,KAFH;AAGD,OAdD;AAeD;;;mCAEeY,G,EAAK;AACnB,UAAII,WAAW,eAAeC,IAAf,CAAoBL,GAApB,KAA4B,IAA3C;AACA,UAAIM,OAAQF,YAAYA,SAASG,MAAT,GAAkB,CAA/B,GAAoCH,SAAS,CAAT,CAApC,GAAkD,IAA7D;AACA,UAAII,QAAQ,gBAAgBH,IAAhB,CAAqBL,GAArB,CAAZ;AACA,UAAIM,IAAJ,EAAU;AACR,aAAKG,kBAAL,CAAwBH,IAAxB;AACD,OAFD,MAEO,IAAIE,KAAJ,EAAW;AAChBE,cAAM,gDACJ,4CADF;AAED;AACF;;;uCAEkBJ,I,EAAM;AAAA;;AACvB,2BAAQK,IAAR,CAAa,6CAAb,EAA4D;AAC1DC,mBAAW,KAAK1B,QAD0C;AAE1D2B,uBAAe,KAAK1B,YAFsC;AAG1DmB,cAAMA;AAHoD,OAA5D,EAIGQ,GAJH,CAIO,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACxB,eAAK5B,MAAL,CAAY6B,OAAZ;AACA,YAAIF,GAAJ,EAAS;AACP,iBAAK1B,QAAL,CAAc0B,GAAd;AACD;AACD,YAAIG,eAAeF,SAASG,IAAT,CAAcD,YAAjC;AACA,eAAK7B,QAAL,CAAc2B,SAASG,IAAT,CAAcD,YAA5B;AACD,OAXD;AAYD;;;;;;kBAvDkBpC,U","file":"OauthGithub.js","sourcesContent":["'use strict';\n\nimport assert from 'assert';\nimport { app, BrowserWindow } from 'electron';\nimport request from 'superagent';\n\nexport default class AuthWindow {\n  constructor({ id, secret, scopes = [] }) {\n    assert(id, 'Client ID is needed!');\n    assert(secret, 'Client Secret is needed!');\n    this.scopes = scopes;\n    this.clientId = id;\n    this.clientSecret = secret;\n    this.window = null;\n    this.callback = null;\n  }\n\n  startRequest(callback) {\n    this.callback = callback;\n    app.on('ready', () => {\n      this.window = new BrowserWindow({ width: 800, height: 600, webPreferences: {nodeIntegration: false}});\n      var authURL = 'https://github.com/login/oauth/authorize?client_id=' + this.clientId + '&scope=' + this.scopes;\n      this.window.loadURL(authURL);\n      this.window.show();\n      this.window.webContents.on('will-navigate', (event, url) => {\n        this.handleCallback(url);\n      });\n      this.window.webContents.on('did-get-redirect-request', (event, oldUrl, newUrl) => {\n        this.handleCallback(newUrl);\n      });\n      this.window.on('close', () => {\n        this.window = null;\n      }, false);\n    });\n  }\n\n  handleCallback (url) {\n    var raw_code = /code=([^&]*)/.exec(url) || null;\n    var code = (raw_code && raw_code.length > 1) ? raw_code[1] : null;\n    var error = /\\?error=(.+)$/.exec(url);\n    if (code) {\n      this.requestGithubToken(code);\n    } else if (error) {\n      alert('Oops! Something went wrong and we couldn\\'t' +\n        'log you in using Github. Please try again.');\n    }\n  }\n\n  requestGithubToken(code) {\n    request.post('https://github.com/login/oauth/access_token', {\n      client_id: this.clientId,\n      client_secret: this.clientSecret,\n      code: code,\n    }).end((err, response) => {\n      this.window.destroy();\n      if (err) {\n        this.callback(err);\n      }\n      var access_token = response.body.access_token;\n      this.callback(response.body.access_token);\n    });\n  }\n\n}\n"]}